{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAOC,SAASC,cAAc,SAC9BC,EAAQF,SAASG,kBAAkB,SACnCC,EAAOJ,SAASG,kBAAkB,QAClCE,EAASL,SAASG,kBAAkB,UAC9BH,SAASC,cAAc,UA0BnC,SAASK,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GAatC,OAXgB,IAAIC,SAAQ,CAACC,EAASC,KACpCC,YAAW,KACT,MAAMC,EAAS,C,SAAET,EAAUU,MAAAT,GACvBC,EACFI,EAAQG,GAERF,EAAOE,EAAO,GAEfR,EAAM,G,CAnCbT,EAAKmB,iBAAiB,UAEtB,SAAkBC,GAChBA,EAAMC,iBAEN,MAAOC,GAAehB,GACfiB,GAAcpB,GACdqB,GAAanB,EACdoB,EAAcC,OAAOJ,EAAYK,OACjCC,EAAeF,OAAOH,EAAWI,OACjCE,EAAYH,OAAOF,EAAUG,OAEnC,IAAK,IAAIG,EAAI,EAAGA,EAAIL,EAAaK,IAAK,CAEpCvB,EAAcuB,EAAI,EADGF,EAAeC,EAAYC,GAE7CC,MAAK,EAACvB,SAAEA,EAAUU,MAAAc,MACjBC,EAAAnC,GAASoC,OAAOC,QAAQ,uBAAqB3B,QAAiBwB,MAAU,IAEzEI,OAAM,EAAC5B,SAAEA,EAAUU,MAAAmB,MACnBJ,EAAAnC,GAASoC,OAAOI,QAAQ,sBAAoB9B,QAAe6B,MAAU,G","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\nconst delay = document.getElementsByName('delay');\nconst step = document.getElementsByName('step');\nconst amount = document.getElementsByName('amount');\nconst btn = document.querySelector('button');\n\nform.addEventListener('submit', onSubmit);\n\nfunction onSubmit(event) {\n  event.preventDefault();\n\n  const [amountInput] = amount;\n  const [delayInput] = delay;\n  const [stepInput] = step;\n  const amountValue = Number(amountInput.value);\n  const initialDelay = Number(delayInput.value);\n  const stepValue = Number(stepInput.value);\n\n  for (let i = 0; i < amountValue; i++) {\n    const promiseDelay = initialDelay + stepValue * i;\n    createPromise(i + 1, promiseDelay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n       Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const result = { position, delay };\n      if (shouldResolve) {\n        resolve(result);\n      } else {\n        reject(result);\n      }\n    }, delay);\n  });\n\n  return promise;\n}\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$delay","getElementsByName","$47d4ff9957288465$var$step","$47d4ff9957288465$var$amount","$47d4ff9957288465$var$createPromise","position","delay3","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","result","delay","addEventListener","event","preventDefault","amountInput","delayInput","stepInput","amountValue","Number","value","initialDelay","stepValue","i","then","delay1","$parcel$interopDefault","Notify","success","catch","delay2","failure"],"version":3,"file":"03-promises.8f31bf01.js.map"}